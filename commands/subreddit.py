import praw

reddit = praw.Reddit('AUTHENTICATION')
SUBREDDIT_NAME = 'abc123'

reddit.subreddit.create(name, title=None, link_type='any', subreddit_type='public', wikimode='disabled')
reddit.subreddit('all').hot(limit=25)  # Treated differently than a subreddit

subreddit = reddit.subreddit(SUBREDDIT_NAME)
subreddit.banned()
subreddit.banned.add(redditor)
subreddit.banned.relationship()
subreddit.banned.remove(redditor)
subreddit.banned.subreddit()
subreddit.comments()
subreddit.comments.gilded()
subreddit.contributor()
subreddit.contributor.add(redditor, **other_settings)
subreddit.contributor.leave()
subreddit.contributor.relationship()
subreddit.contributor.remove(redditor)
subreddit.controversial(time_filter='all')  # 'all', 'day', 'hour', 'month', 'week', 'year'
subreddit.display_name()
subreddit.filters()
subreddit.filters.add(subreddit)
subreddit.filters.remove(subreddit)
subreddit.flair()
subreddit.flair.configure(position='right', self_assign=False, link_position='left', link_self_assign=False, **settings)
subreddit.flair.delete(redditor)
subreddit.flair.delete_all()
subreddit.flair.set(redditor=None, text='', css_class='', thing=None)
subreddit.flair.subreddit()
subreddit.flair.templates()
subreddit.flair.update(flair_list, text='', css_class='')
subreddit.fullname()
subreddit.gilded()
subreddit.hot()
subreddit.message(subject, message, from_subreddit=None)
subreddit.mod()
subreddit.mod.accept_invite()
subreddit.mod.edited(only=None)
subreddit.mod.inbox()
subreddit.mod.log(action=None, mod=None)
subreddit.mod.modqueue(only=None)
subreddit.mod.reports(only=None)
subreddit.mod.settings()
subreddit.mod.spam(only=None)
subreddit.mod.subreddit()
subreddit.mod.unmoderated()
subreddit.mod.unread()
subreddit.mod.update(**settings)
subreddit.moderator()
subreddit.moderator.add(redditor, permissions=None, **other_settings)  # 'access', 'config', 'flair', 'mail', 'posts', 'wiki'
subreddit.moderator.invite(redditor, permissions=None, **other_settings)  # 'access', 'config', 'flair', 'mail', 'posts', 'wiki'
subreddit.moderator.leave()
subreddit.moderator.relationship()
subreddit.moderator.remove(redditor)
subreddit.moderator.remove_invite(redditor)
subreddit.moderator.subreddit()
subreddit.moderator.update(redditor, permissions=None)
subreddit.moderator.update_invite(redditor, permissions=None)
subreddit.modmail()
subreddit.modmail.bulk_read(other_subreddits=None, state=None)
subreddit.modmail.conversations(after=None, limit=None, other_subreddits=None, sort=None, state=None)
subreddit.modmail.create(subject, body, recipient, author_hidden=False)
subreddit.modmail.subreddit()
subreddit.modmail.subreddits()
subreddit.modmail.unread_count()
subreddit.muted()
subreddit.muted.add(redditor)
subreddit.muted.relationship()
subreddit.muted.remove(redditor)
subreddit.new()
subreddit.quaran()
subreddit.quaran.opt_in()
subreddit.quaran.opt_out()
subreddit.random()
subreddit.random_rising()
subreddit.rising()
subreddit.rules()
subreddit.search(query, sort='relevance', syntax='cloudsearch', time_filter='all')
subreddit.sticky(number=1)
subreddit.stream()
subreddit.stream.comments()
subreddit.stream.submissions()
subreddit.stylesheet()
subreddit.stylesheet.delete_header()
subreddit.stylesheet.delete_image(name)
subreddit.stylesheet.delete_mobile_header()
subreddit.stylesheet.delete_mobile_icon()
subreddit.stylesheet.subreddit()
subreddit.stylesheet.update(stylesheet, reason=None)
subreddit.stylesheet.upload(name, image_path)
subreddit.stylesheet.upload_header(image_path)
subreddit.stylesheet.upload_mobile_header(image_path)
subreddit.stylesheet.upload_mobile_icon(image_path)
subreddit.submissions(start=None, end=None, extra_query=None)
subreddit.submit(title, selftext=None, url=None, resubmit=True, send_replies=True)
subreddit.subscribe(other_subreddits=None)
subreddit.top(time_filter='all')  # 'all', 'day', 'hour', 'month', 'week', 'year'
subreddit.traffic()
subreddit.unsubscribe(other_subreddits=None)
subreddit.wiki()
subreddit.wiki.banned()
subreddit.wiki.contributor()
subreddit.wiki.create(name, content, reason=None, **other_settings)
subreddit.wiki.revisions()
